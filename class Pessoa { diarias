class Pessoa {
    constructor(nome, idade, sexo) {
        this.nome = nome,
        this.idade = idade,
        this.sexo = sexo || "m"
    }

    comparaIdade(pessoa) {
        const frase = this.obtemFrase(pessoa.idade, pessoa.sexo)
        return `${pessoa.sexo === "m" ? "O" : "A"} ${pessoa.nome} ${frase} que eu.`
    }

    obtemFrase(idade, sexo) {
        return this.idade === idade ? "é da mesma idade" :
                this.idade < idade ? `é mais nov${sexo === "m" ? "o" : "a"} do` :
                `é mais velh${sexo === "m" ? "o" : "a"} do`
    }
}
const pessoa1 = new Pessoa("Joao", 30, "m")
const pessoa2 = new Pessoa("Maria", 25, "f")

console.log(pessoa1.comparaIdade(pessoa2))

############################################ OUTRA MANEIRA


class Pessoa {
  constructor(nome, idade, sexo) {
    this.nome = nome;
    this.idade = idade;
    this.sexo = sexo;
  }

  comparaIdade(pessoa) {
    if (pessoa.idade > this.idade) {
      return `${this.getPrefixo(pessoa.sexo)} ${pessoa.nome} é mais velh${this.getSufixo(pessoa.sexo)} do que eu.`;
    } else if (pessoa.idade < this.idade) {
      return `${this.getPrefixo(pessoa.sexo)} ${pessoa.nome} é mais nov${this.getSufixo(pessoa.sexo)} do que eu.`;
    } else {
      return `${this.getPrefixo(pessoa.sexo)} ${pessoa.nome} é da mesma idade que eu.`;
    }
  }

  getPrefixo(sexo) {
    return sexo === "m" ? "O" : "A";
  }

  getSufixo(sexo) {
    return sexo === "m" ? "o" : "a";
  }
}

